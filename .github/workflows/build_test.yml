# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs


# name of workflow
name: Build and Test

# workflow will trigger on these events -> push & pull requests on main branch
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # job 1
  security_tests:
    runs-on: ubuntu-latest
    steps:
    - name: Clone repo on remote machine (runner)
      uses: actions/checkout@v4
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    - name: Install project dependencies
      run: npm install
    - name: Start app
      run: npm run start &
    - name: Run security tests
      run: npm audit

  # job 2
  build_test:
    runs-on: ubuntu-latest    # version of the remote testing machine (runner)
    needs: security_tests     # NOTE: 'needs' param will make job2 dependant on job1. Both jobs will run successively

    # # optional job parameter adding more functionality & flexibility
    # strategy:
    #   fail-fast: true     # if any job fails, entire workflow fails too
    #   matrix:             # creates a matrix of 3 jobs on 3 different runner versions. All of them will run parallel
    #     node-version: [18.x, 20.x, 22.x]

    steps:
    - name: Clone repo on remote machine (runner)     # step 1. Runner clones repo
      uses: actions/checkout@v4
    - name: Use Node.js 20    # step 2. Installs node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    - name: Install project dependencies              # step 3. Installs dependencies
      run: npm install
    - name: Start app                                 # Runs (builds) the app
      # '&' -> app will run in background
      run: npm run start &
    - name: Run integration tests and save output             # Runs tests & creates log file
      run: npm run test | tee test-output.log
    
    - name: Upload test output as artifact
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test-output.log
  
  deploy:
    runs-on: ubuntu-latest
    needs: build_test
    steps:
      - name: Repo checkout
        uses: actions/checkout@v3
      - name: Deploy to production
        uses: JorgeLNJunior/render-deploy@v1.4.4
        with:
          service-id: ${{ secrets.MY_RENDER_SERVICE_ID }}
          api-key: ${{ secrets.MY_RENDER_API_KEY }}
          wait_deploy: true
